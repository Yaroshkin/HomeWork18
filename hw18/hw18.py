# Реализуйте класс стека для работы со строками (стек строк). 
# Стек должен иметь фиксированный размер. Реализуйте набор операций для работы со стеком: 
# ■ помещение строки в стек; 
# ■ выталкивание строки из стека; 
# ■ подсчет количества строк в стеке; 
# ■ проверку пустой ли стек; 
# ■ проверку полный ли стек; 
# ■ очистку стека; 
# ■ получение значения без выталкивания верхней строки из стека. 
# При старте приложения нужно отобразить меню с помощью, которого пользователь может выбрать необходимую операцию.

class Stack:
    def __init__(self):
        self.__li = []

    # ■ помещение строки в стек
    def push(self, value):
        self.__li.append(value)
    
    # ■ выталкивание строки из стека
    def pop(self):
        if len(self.__li):
            return self.__li.pop()

    # ■ подсчет количества строк в стеке
    def count(self):
        print(f"Кол-во строк в стеке {len(self.__li)}")

    # ■ проверку пустой ли стек
    def zero(self):
        if self.__li == []:
            print("Стек пустой ")
        else:
            print("Что-то есть ")

    # ■ проверку полный ли стек
    def full(self):
        if self.__li != []:
            print(f"Стек заполнен {self.__li}")
        else:
            print("Error")
    
    # ■ очистку стека
    def clean(self):
        self.__li.clear()

    # ■ получение значения без выталкивания верхней строки из стека.
    def no_up(self):
        print(self.__li[::-2])


stack = Stack()
stack.push(4)   
stack.push(2)
stack.push(3)
# print(stack.clean())   
print(stack.zero())
print(stack.no_up())